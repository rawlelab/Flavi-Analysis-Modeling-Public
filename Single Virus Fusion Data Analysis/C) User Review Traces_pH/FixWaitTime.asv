function [CorrectedAnalysisData] = FixWaitTime(CorrectedAnalysisData,UniversalData,FigureHandles,TraceNumberIndex)
            
         
            CurrentTraceBackSub = CorrectedAnalysisData(TraceNumberIndex).Trace_BackSub;
            FusionData = CorrectedAnalysisData(TraceNumberIndex).FusionData;
            PHDropFrameNum = FusionData.pHDropFrameNumber;
                % Is this the right frame number (a different one is listed
                % in CorrectedAnalysisData(TraceNumberIndex).PHdropFrameNum???

            % Correct focus problems
            [CurrentTraceBackSub] = Correct_Focus_Problems(CurrentTraceBackSub,UniversalData);

            set(0,'CurrentFigure',FigureHandles.FixWaitPlot)
            cla

            plot(CurrentTraceBackSub,'b-')
            hold on
            title(strcat("Trace ID = ", num2str(TraceNumberIndex)))

            LineToPlot = ylim;
            XToPlot = [PHDropFrameNum, PHDropFrameNum];
            plot(XToPlot,LineToPlot,'k--')

            [FrameNum,Yval] = ginput(1);

            Fuse1FrameNum = round(FrameNum);

            %Need to check with user
            %Also add x,y coords to display so we can look up the exact
            %VLP

            NewWaitTime = CorrectedAnalysisData(TraceNumberIndex).TimeVector(Fuse1FrameNum) - CorrectedAnalysisData(TraceNumberIndex).TimeVector(PHDropFrameNum);

            FusionData.FuseFrameNumbers = Fuse1FrameNum;
            FusionData.pHtoFusionNumFrames = Fuse1FrameNum-PHDropFrameNum;
            FusionData.pHtoFusionTime = (Fuse1FrameNum-PHDropFrameNum).*...
                CorrectedAnalysisData(TraceNumberIndex).FusionData.TimeInterval;

            set(0,'CurrentFigure',FigureHandles.FixWaitPlot)
            hold on
            LineToPlot = ylim;
            XToPlot = [FusionData.FuseFrameNumbers(1), FusionData.FuseFrameNumbers(1)];
            plot(XToPlot,LineToPlot,'g--')

            title(strcat("pH to Fuse wait time = ", num2str(FusionData.pHtoFusionTime), " sec"))


            AskUserAgain = 'y';
            while AskUserAgain =='y'
                
                Prompts = {'We all good here?'};
                DefaultInputs = {'y'};
                Heading = 'Type n if not';
                UserAnswer = inputdlg(Prompts,Heading, 1, DefaultInputs, 'on');
    
                if strcmp(UserAnswer{1,1},'n')
                    disp('You Chose To Quit')
                    ThisWillCauseError
                
                elseif strcmp(UserAnswer{1,1},'No Correction Needed')
                    % Everything is correct, move to next round
                    AskUserAgain = 'n';
                    
                else
                    
                    % Extract User Inputs
                    IncorrectPlotIndices = str2num(UserAnswer{1,1}); 
                    
                    if isvector(IncorrectPlotIndices)
                        % User has indicated that we need to correct some designations                
                        
                        [AskUserAgain, CorrectedAnalysisData, ErrorCounter] = Correct_Designations(IncorrectPlotIndices,...
                            PreviousAnalysisData,CurrentTraceRange,CorrectedAnalysisData,ErrorCounter,Options,UniversalData,FigureHandles);
                        
                    else
                        % There has been an error, re-run the last round to avoid crash
                        AskUserAgain = 'y';
                    end
                end
            end

            
            CorrectedAnalysisData(TraceNumberIndex).FusionData = FusionData;

            
end